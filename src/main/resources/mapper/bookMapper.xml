<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- book -->
<mapper namespace="com.sjt.lib.book.dao.BookMapper">
    <!-- This code was generated by TableGo tools, mark 1 begin. -->
    <!-- 字段映射 -->
    <resultMap id="bookMap" type="Book">
        <id column="id" property="id" jdbcType="INTEGER" />
        <result column="name" property="name" jdbcType="VARCHAR" />
        <result column="author" property="author" jdbcType="VARCHAR" />
        <result column="publish" property="publish" jdbcType="VARCHAR" />
    </resultMap>
    <!-- This code was generated by TableGo tools, mark 1 end. -->

    <!-- This code was generated by TableGo tools, mark 2 begin. -->
    <!-- 表查询字段 -->
    <sql id="allColumns">
        b.id, b.name, b.author, b.publish
    </sql>
    <!-- This code was generated by TableGo tools, mark 2 end. -->

    <!-- 查询所有 -->
    <select id="findBookAll" resultMap="bookMap">
        SELECT
            <include refid="allColumns" />
        FROM book b
    </select>

    <!-- 根据条件参数查询列表 -->
    <select id="findBookByCondition" resultMap="bookMap" parameterType="map">
        SELECT
            <include refid="allColumns" />
        FROM book b WHERE 1 = 1
        <if test="name != null and name != ''">
            AND b.name LIKE CONCAT('%', #{name}, '%')
        </if>
        <if test="author != null and author != ''">
            AND b.author LIKE CONCAT('%', #{author}, '%')
        </if>
        <if test="publish != null and publish != ''">
            AND b.publish LIKE CONCAT('%', #{publish}, '%')
        </if>
    </select>

    <!-- 根据主键查询信息 -->
    <select id="findBookByIds" resultMap="bookMap" parameterType="list">
        SELECT
            <include refid="allColumns" />
        FROM book b WHERE b.id IN
        <foreach collection="list" index="index" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </select>

    <!-- 新增信息 -->
    <insert id="addBook">
        INSERT INTO book (
            id, name, author, publish
        ) VALUES (
            #{id},
            #{name},
            #{author},
            #{publish}
        )
    </insert>

    <!-- 批量新增信息 -->
    <insert id="addBooks" parameterType="list">
        INSERT INTO book (
            id, name, author, publish
        ) VALUES
        <foreach collection="list" index="index" item="item" separator=",">
            (
                #{item.id},
                #{item.name},
                #{item.author},
                #{item.publish}
            )
        </foreach>
    </insert>

    <!-- 修改信息 -->
    <update id="updateBook">
        UPDATE book
        <set>
            <if test="name != null">
                `name` = #{name},
            </if>
            <if test="author != null">
                author = #{author},
            </if>
            <if test="publish != null">
                publish = #{publish}
            </if>
        </set>
        WHERE id = #{id}
    </update>

    <!-- 批量修改信息 -->
    <update id="updateBooks" parameterType="list">
        <foreach collection="list" index="index" item="item" separator=";">
            UPDATE book
            <set>
                <if test="item.name != null">
                   `name` = #{item.name},
                </if>
                <if test="item.author != null">
                    author = #{item.author},
                </if>
                <if test="item.publish != null">
                    publish = #{item.publish}
                </if>
            </set>
            WHERE id = #{item.id}
        </foreach>
    </update>

    <!-- 根据主键删除 -->
    <delete id="deleteBookById" parameterType="int">
        DELETE FROM book WHERE id = #{id}
    </delete>

    <!-- 根据主键批量删除 -->
    <delete id="deleteBookByIds" parameterType="list">
        DELETE FROM book WHERE id IN
        <foreach collection="list" index="index" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
</mapper>